{"version":3,"file":"component---src-pages-tags-js-f9bc7c6d5fda1fd8f6d2.js","mappings":"8KAkFA,UAzEiB,SAAC,GAQX,IAAD,IAPJA,KACuBC,EAMnB,EANFC,kBAAqBD,MAEHE,EAIhB,EALFC,KACEC,aAAgBF,MAGpBG,EACI,EADJA,SAEA,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CACEC,SAAU,CAAC,aAAc,aAAc,SAAU,aAAc,YAAa,cAC5EJ,MAAOA,EACPK,KAAMF,EAASG,WAGjB,2BAASC,UAAU,UACjB,sBAAIA,UAAU,2BAAd,QACA,uBAAKA,UAAU,iBACb,uBAAKA,UAAU,UACZT,EAAMU,KAAI,SAAAC,GACT,OACE,gBAAC,IAAD,CACEC,IAAQD,EAAIE,WAAT,aACHF,IAAKA,EAAIE,WACTC,MAAOH,EAAII,WACXC,WAAW","sources":["webpack://milenology-dot-com/./src/pages/tags.js"],"sourcesContent":["import React from 'react';\n// Components\nimport { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport TagLink from '../components/tag-link';\n\nconst TagsPage = ({\n  data: {\n    allMarkdownRemark: { group },\n    site: {\n      siteMetadata: { title }\n    }\n  },\n  location\n}) => {\n  return (\n    <Layout>\n      <SEO\n        keywords={['terencelim', 'technology', 'travel', 'life hacks', 'microsoft', 'salesforce']}\n        title={title}\n        path={location.pathname}\n      />\n\n      <section className=\"flex-1\">\n        <h1 className=\"mb-4 text-2xl font-bold\">Tags</h1>\n        <div className=\"flex flex-row\">\n          <div className=\"flex-1\">\n            {group.map(tag => {\n              return (\n                <TagLink\n                  key={`${tag.fieldValue}-tags-page`}\n                  tag={tag.fieldValue}\n                  count={tag.totalCount}\n                  showCount={true}\n                />\n              );\n            })}\n          </div>\n        </div>\n      </section>\n    </Layout>\n  );\n};\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(limit: 2000) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`;\n\nTagsPage.propTypes = {\n  location: PropTypes.object,\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      group: PropTypes.arrayOf(\n        PropTypes.shape({\n          fieldValue: PropTypes.string.isRequired,\n          totalCount: PropTypes.number.isRequired\n        }).isRequired\n      )\n    }),\n    site: PropTypes.shape({\n      siteMetadata: PropTypes.shape({\n        title: PropTypes.string.isRequired\n      })\n    })\n  })\n};\n\nexport default TagsPage;\n"],"names":["data","group","allMarkdownRemark","title","site","siteMetadata","location","keywords","path","pathname","className","map","tag","key","fieldValue","count","totalCount","showCount"],"sourceRoot":""}